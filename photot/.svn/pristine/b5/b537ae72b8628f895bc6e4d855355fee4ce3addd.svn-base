package service;

import dao.CustomerDao;
import domain.Customer;
import org.hibernate.criterion.DetachedCriteria;
import org.springframework.transaction.annotation.Isolation;
import org.springframework.transaction.annotation.Propagation;
import org.springframework.transaction.annotation.Transactional;
import utils.PageBean;

import java.util.List;
@Transactional(isolation= Isolation.REPEATABLE_READ,propagation= Propagation.REQUIRED,readOnly=false)
public class CustomerServiceImpl implements CustomerService {
    private CustomerDao customerDao;

    public void setCustomerDao(CustomerDao customerDao) {
        this.customerDao = customerDao;
    }

    @Override
    public PageBean getPageBean(DetachedCriteria dc, Integer currentPage, Integer pageSize) {
//      调用Dao查询总记录数

        Integer totalCount=customerDao.getTotalCount(dc);
//      创建pageBean对象
        PageBean pageBean = new PageBean(currentPage, totalCount, pageSize);
//        调用Dao查询分页列表数据
         List<Customer> list=customerDao.getPageList(dc, pageBean.getStart(), pageBean.getPageSize());
////
         pageBean.setList(list);

        return pageBean;
    }

    @Override
    public void save(Customer customer) {
        //1 维护Customer与数据字典对象的关系,由于struts2参数封装,会将参数封装到数据字典的id属性.
        //那么我们无需手动维护关系
        //2 调用Dao保存客户
        customerDao.save(customer);

    }
}
